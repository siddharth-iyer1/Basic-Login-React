{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { ListActionTypes } from './listActions.types';\nimport { ListContext } from './ListContext';\n\n/**\r\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\r\n * It provides information about the item's state (selected, highlighted) and\r\n * handles the item's mouse events.\r\n *\r\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\r\n * @ignore - internal hook.\r\n */\nexport function useListItem(parameters) {\n  var _parameters$handlePoi = parameters.handlePointerOverEvents,\n    handlePointerOverEvents = _parameters$handlePoi === void 0 ? false : _parameters$handlePoi,\n    item = parameters.item,\n    externalRef = parameters.rootRef;\n  var itemRef = React.useRef(null);\n  var handleRef = useForkRef(itemRef, externalRef);\n  var listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  var dispatch = listContext.dispatch,\n    getItemState = listContext.getItemState,\n    registerHighlightChangeHandler = listContext.registerHighlightChangeHandler,\n    registerSelectionChangeHandler = listContext.registerSelectionChangeHandler;\n  var _getItemState = getItemState(item),\n    highlighted = _getItemState.highlighted,\n    selected = _getItemState.selected,\n    focusable = _getItemState.focusable;\n  var rerender = useForcedRerendering();\n  useEnhancedEffect(function () {\n    function updateHighlightedState(highlightedItem) {\n      if (highlightedItem === item && !highlighted) {\n        rerender();\n      } else if (highlightedItem !== item && highlighted) {\n        rerender();\n      }\n    }\n    return registerHighlightChangeHandler(updateHighlightedState);\n  });\n  useEnhancedEffect(function () {\n    function updateSelectedState(selectedItems) {\n      if (!selected) {\n        if (selectedItems.includes(item)) {\n          rerender();\n        }\n      } else if (!selectedItems.includes(item)) {\n        rerender();\n      }\n    }\n    return registerSelectionChangeHandler(updateSelectedState);\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\n  var createHandleClick = React.useCallback(function (externalHandlers) {\n    return function (event) {\n      var _externalHandlers$onC;\n      (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      dispatch({\n        type: ListActionTypes.itemClick,\n        item: item,\n        event: event\n      });\n    };\n  }, [dispatch, item]);\n  var createHandlePointerOver = React.useCallback(function (externalHandlers) {\n    return function (event) {\n      var _externalHandlers$onM;\n      (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\n      if (event.defaultPrevented) {\n        return;\n      }\n      dispatch({\n        type: ListActionTypes.itemHover,\n        item: item,\n        event: event\n      });\n    };\n  }, [dispatch, item]);\n  var tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  var getRootProps = function getRootProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({}, externalProps, {\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      ref: handleRef,\n      tabIndex: tabIndex\n    });\n  };\n  return {\n    getRootProps: getRootProps,\n    highlighted: highlighted,\n    rootRef: handleRef,\n    selected: selected\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","useForcedRerendering","extractEventHandlers","ListActionTypes","ListContext","useListItem","parameters","_parameters$handlePoi","handlePointerOverEvents","item","externalRef","rootRef","itemRef","useRef","handleRef","listContext","useContext","Error","dispatch","getItemState","registerHighlightChangeHandler","registerSelectionChangeHandler","_getItemState","highlighted","selected","focusable","rerender","updateHighlightedState","highlightedItem","updateSelectedState","selectedItems","includes","createHandleClick","useCallback","externalHandlers","event","_externalHandlers$onC","onClick","call","defaultPrevented","type","itemClick","createHandlePointerOver","_externalHandlers$onM","onMouseOver","itemHover","tabIndex","getRootProps","externalProps","arguments","length","undefined","externalEventHandlers","onPointerOver","ref"],"sources":["C:/Users/Boris/Desktop/EE461L/Basic-Login-React/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["'use client';\r\n\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\r\nimport { useForcedRerendering } from '../utils/useForcedRerendering';\r\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\r\nimport { ListActionTypes } from './listActions.types';\r\nimport { ListContext } from './ListContext';\r\n\r\n/**\r\n * Contains the logic for an item of a list-like component (e.g. Select, Menu, etc.).\r\n * It provides information about the item's state (selected, highlighted) and\r\n * handles the item's mouse events.\r\n *\r\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\r\n * @ignore - internal hook.\r\n */\r\nexport function useListItem(parameters) {\r\n  const {\r\n    handlePointerOverEvents = false,\r\n    item,\r\n    rootRef: externalRef\r\n  } = parameters;\r\n  const itemRef = React.useRef(null);\r\n  const handleRef = useForkRef(itemRef, externalRef);\r\n  const listContext = React.useContext(ListContext);\r\n  if (!listContext) {\r\n    throw new Error('useListItem must be used within a ListProvider');\r\n  }\r\n  const {\r\n    dispatch,\r\n    getItemState,\r\n    registerHighlightChangeHandler,\r\n    registerSelectionChangeHandler\r\n  } = listContext;\r\n  const {\r\n    highlighted,\r\n    selected,\r\n    focusable\r\n  } = getItemState(item);\r\n  const rerender = useForcedRerendering();\r\n  useEnhancedEffect(() => {\r\n    function updateHighlightedState(highlightedItem) {\r\n      if (highlightedItem === item && !highlighted) {\r\n        rerender();\r\n      } else if (highlightedItem !== item && highlighted) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerHighlightChangeHandler(updateHighlightedState);\r\n  });\r\n  useEnhancedEffect(() => {\r\n    function updateSelectedState(selectedItems) {\r\n      if (!selected) {\r\n        if (selectedItems.includes(item)) {\r\n          rerender();\r\n        }\r\n      } else if (!selectedItems.includes(item)) {\r\n        rerender();\r\n      }\r\n    }\r\n    return registerSelectionChangeHandler(updateSelectedState);\r\n  }, [registerSelectionChangeHandler, rerender, selected, item]);\r\n  const createHandleClick = React.useCallback(externalHandlers => event => {\r\n    var _externalHandlers$onC;\r\n    (_externalHandlers$onC = externalHandlers.onClick) == null || _externalHandlers$onC.call(externalHandlers, event);\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.itemClick,\r\n      item,\r\n      event\r\n    });\r\n  }, [dispatch, item]);\r\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\r\n    var _externalHandlers$onM;\r\n    (_externalHandlers$onM = externalHandlers.onMouseOver) == null || _externalHandlers$onM.call(externalHandlers, event);\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.itemHover,\r\n      item,\r\n      event\r\n    });\r\n  }, [dispatch, item]);\r\n  let tabIndex;\r\n  if (focusable) {\r\n    tabIndex = highlighted ? 0 : -1;\r\n  }\r\n  const getRootProps = (externalProps = {}) => {\r\n    const externalEventHandlers = extractEventHandlers(externalProps);\r\n    return _extends({}, externalProps, {\r\n      onClick: createHandleClick(externalEventHandlers),\r\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\r\n      ref: handleRef,\r\n      tabIndex\r\n    });\r\n  };\r\n  return {\r\n    getRootProps,\r\n    highlighted,\r\n    rootRef: handleRef,\r\n    selected\r\n  };\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}